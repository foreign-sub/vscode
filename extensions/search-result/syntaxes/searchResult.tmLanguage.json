{
  "information_for_contributors": "This file is generated from ./generateTMLanguage.js.",
  "name": "Search Results",
  "scopeName": "text.searchResult",
  "patterns": [
    {
      "match": "^# (Query|Flags|Including|Excluding|ContextLines): .*$",
      "name": "comment"
    },
    {
      "include": "#bat"
    },
    {
      "include": "#c"
    },
    {
      "include": "#clj"
    },
    {
      "include": "#coffee"
    },
    {
      "include": "#cpp"
    },
    {
      "include": "#cs"
    },
    {
      "include": "#css"
    },
    {
      "include": "#dart"
    },
    {
      "include": "#diff"
    },
    {
      "include": "#dockerfile"
    },
    {
      "include": "#fs"
    },
    {
      "include": "#go"
    },
    {
      "include": "#groovy"
    },
    {
      "include": "#h"
    },
    {
      "include": "#hpp"
    },
    {
      "include": "#html"
    },
    {
      "include": "#java"
    },
    {
      "include": "#js"
    },
    {
      "include": "#json"
    },
    {
      "include": "#jsx"
    },
    {
      "include": "#less"
    },
    {
      "include": "#lua"
    },
    {
      "include": "#m"
    },
    {
      "include": "#make"
    },
    {
      "include": "#mm"
    },
    {
      "include": "#p6"
    },
    {
      "include": "#perl"
    },
    {
      "include": "#php"
    },
    {
      "include": "#pl"
    },
    {
      "include": "#ps1"
    },
    {
      "include": "#py"
    },
    {
      "include": "#r"
    },
    {
      "include": "#rb"
    },
    {
      "include": "#rs"
    },
    {
      "include": "#scala"
    },
    {
      "include": "#scss"
    },
    {
      "include": "#sh"
    },
    {
      "include": "#sql"
    },
    {
      "include": "#swift"
    },
    {
      "include": "#ts"
    },
    {
      "include": "#tsx"
    },
    {
      "include": "#yaml"
    },
    {
      "match": "^(?!\\s)(.*?)([^\\\\\\/\\n]*)(:)$",
      "name": "string path.searchResult",
      "captures": {
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      }
    },
    {
      "match": "^  (\\d+)(:| )",
      "captures": {
        "1": {
          "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
        },
        "2": {
          "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
        }
      }
    }
  ],
  "repository": {
    "bat": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.bat)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.bat",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.bat searchResult.multiline",
          "patterns": [
            {
              "include": "source.batchfile"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.bat searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.batchfile"
                }
              ]
            }
          }
        }
      ]
    },
    "c": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.c)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.c",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.c searchResult.multiline",
          "patterns": [
            {
              "include": "source.c"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.c searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.c"
                }
              ]
            }
          }
        }
      ]
    },
    "clj": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.clj)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.clj",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.clj searchResult.multiline",
          "patterns": [
            {
              "include": "source.clojure"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.clj searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.clojure"
                }
              ]
            }
          }
        }
      ]
    },
    "coffee": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.coffee)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.coffee",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.coffee searchResult.multiline",
          "patterns": [
            {
              "include": "source.coffee"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.coffee searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.coffee"
                }
              ]
            }
          }
        }
      ]
    },
    "cpp": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.cpp)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.cpp",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.cpp searchResult.multiline",
          "patterns": [
            {
              "include": "source.cpp"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.cpp searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.cpp"
                }
              ]
            }
          }
        }
      ]
    },
    "cs": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.cs)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.cs",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.cs searchResult.multiline",
          "patterns": [
            {
              "include": "source.cs"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.cs searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.cs"
                }
              ]
            }
          }
        }
      ]
    },
    "css": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.css)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.css",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.css searchResult.multiline",
          "patterns": [
            {
              "include": "source.css"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.css searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.css"
                }
              ]
            }
          }
        }
      ]
    },
    "dart": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.dart)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.dart",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.dart searchResult.multiline",
          "patterns": [
            {
              "include": "source.dart"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.dart searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.dart"
                }
              ]
            }
          }
        }
      ]
    },
    "diff": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.diff)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.diff",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.diff searchResult.multiline",
          "patterns": [
            {
              "include": "source.diff"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.diff searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.diff"
                }
              ]
            }
          }
        }
      ]
    },
    "dockerfile": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.dockerfile)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.dockerfile",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.dockerfile searchResult.multiline",
          "patterns": [
            {
              "include": "source.dockerfile"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.dockerfile searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.dockerfile"
                }
              ]
            }
          }
        }
      ]
    },
    "fs": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.fs)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.fs",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.fs searchResult.multiline",
          "patterns": [
            {
              "include": "source.fsharp"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.fs searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.fsharp"
                }
              ]
            }
          }
        }
      ]
    },
    "go": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.go)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.go",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.go searchResult.multiline",
          "patterns": [
            {
              "include": "source.go"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.go searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.go"
                }
              ]
            }
          }
        }
      ]
    },
    "groovy": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.groovy)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.groovy",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.groovy searchResult.multiline",
          "patterns": [
            {
              "include": "source.groovy"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.groovy searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.groovy"
                }
              ]
            }
          }
        }
      ]
    },
    "h": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.h)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.h",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.h searchResult.multiline",
          "patterns": [
            {
              "include": "source.objc"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.h searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.objc"
                }
              ]
            }
          }
        }
      ]
    },
    "hpp": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.hpp)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.hpp",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.hpp searchResult.multiline",
          "patterns": [
            {
              "include": "source.objcpp"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.hpp searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.objcpp"
                }
              ]
            }
          }
        }
      ]
    },
    "html": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.html)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.html",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.html searchResult.multiline",
          "patterns": [
            {
              "include": "source.html"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.html searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.html"
                }
              ]
            }
          }
        }
      ]
    },
    "java": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.java)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.java",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.java searchResult.multiline",
          "patterns": [
            {
              "include": "source.java"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.java searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.java"
                }
              ]
            }
          }
        }
      ]
    },
    "js": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.js)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.js",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.js searchResult.multiline",
          "patterns": [
            {
              "include": "source.js"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.js searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.js"
                }
              ]
            }
          }
        }
      ]
    },
    "json": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.json)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.json",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.json searchResult.multiline",
          "patterns": [
            {
              "include": "source.json.comments"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.json searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.json.comments"
                }
              ]
            }
          }
        }
      ]
    },
    "jsx": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.jsx)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.jsx",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.jsx searchResult.multiline",
          "patterns": [
            {
              "include": "source.js.jsx"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.jsx searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.js.jsx"
                }
              ]
            }
          }
        }
      ]
    },
    "less": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.less)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.less",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.less searchResult.multiline",
          "patterns": [
            {
              "include": "source.css.less"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.less searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.css.less"
                }
              ]
            }
          }
        }
      ]
    },
    "lua": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.lua)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.lua",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.lua searchResult.multiline",
          "patterns": [
            {
              "include": "source.lua"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.lua searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.lua"
                }
              ]
            }
          }
        }
      ]
    },
    "m": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.m)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.m",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.m searchResult.multiline",
          "patterns": [
            {
              "include": "source.objc"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.m searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.objc"
                }
              ]
            }
          }
        }
      ]
    },
    "make": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.make)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.make",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.make searchResult.multiline",
          "patterns": [
            {
              "include": "source.makefile"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.make searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.makefile"
                }
              ]
            }
          }
        }
      ]
    },
    "mm": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.mm)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.mm",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.mm searchResult.multiline",
          "patterns": [
            {
              "include": "source.objcpp"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.mm searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.objcpp"
                }
              ]
            }
          }
        }
      ]
    },
    "p6": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.p6)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.p6",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.p6 searchResult.multiline",
          "patterns": [
            {
              "include": "source.perl.6"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.p6 searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.perl.6"
                }
              ]
            }
          }
        }
      ]
    },
    "perl": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.perl)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.perl",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.perl searchResult.multiline",
          "patterns": [
            {
              "include": "source.perl"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.perl searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.perl"
                }
              ]
            }
          }
        }
      ]
    },
    "php": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.php)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.php",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.php searchResult.multiline",
          "patterns": [
            {
              "include": "source.php"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.php searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.php"
                }
              ]
            }
          }
        }
      ]
    },
    "pl": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.pl)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.pl",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.pl searchResult.multiline",
          "patterns": [
            {
              "include": "source.perl"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.pl searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.perl"
                }
              ]
            }
          }
        }
      ]
    },
    "ps1": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.ps1)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.ps1",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.ps1 searchResult.multiline",
          "patterns": [
            {
              "include": "source.powershell"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.ps1 searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.powershell"
                }
              ]
            }
          }
        }
      ]
    },
    "py": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.py)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.py",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.py searchResult.multiline",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.py searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.python"
                }
              ]
            }
          }
        }
      ]
    },
    "r": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.r)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.r",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.r searchResult.multiline",
          "patterns": [
            {
              "include": "source.r"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.r searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.r"
                }
              ]
            }
          }
        }
      ]
    },
    "rb": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.rb)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.rb",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.rb searchResult.multiline",
          "patterns": [
            {
              "include": "source.ruby"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.rb searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.ruby"
                }
              ]
            }
          }
        }
      ]
    },
    "rs": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.rs)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.rs",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.rs searchResult.multiline",
          "patterns": [
            {
              "include": "source.rust"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.rs searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.rust"
                }
              ]
            }
          }
        }
      ]
    },
    "scala": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.scala)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.scala",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.scala searchResult.multiline",
          "patterns": [
            {
              "include": "source.scala"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.scala searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.scala"
                }
              ]
            }
          }
        }
      ]
    },
    "scss": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.scss)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.scss",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.scss searchResult.multiline",
          "patterns": [
            {
              "include": "source.css.scss"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.scss searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.css.scss"
                }
              ]
            }
          }
        }
      ]
    },
    "sh": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.sh)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.sh",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.sh searchResult.multiline",
          "patterns": [
            {
              "include": "source.shell"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.sh searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.shell"
                }
              ]
            }
          }
        }
      ]
    },
    "sql": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.sql)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.sql",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.sql searchResult.multiline",
          "patterns": [
            {
              "include": "source.sql"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.sql searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.sql"
                }
              ]
            }
          }
        }
      ]
    },
    "swift": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.swift)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.swift",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.swift searchResult.multiline",
          "patterns": [
            {
              "include": "source.swift"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.swift searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.swift"
                }
              ]
            }
          }
        }
      ]
    },
    "ts": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.ts)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.ts",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.ts searchResult.multiline",
          "patterns": [
            {
              "include": "source.ts"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.ts searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.ts"
                }
              ]
            }
          }
        }
      ]
    },
    "tsx": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.tsx)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.tsx",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.tsx searchResult.multiline",
          "patterns": [
            {
              "include": "source.tsx"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.tsx searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.tsx"
                }
              ]
            }
          }
        }
      ]
    },
    "yaml": {
      "begin": "^(?!\\s)(.*?)([^\\\\\\/\\n]*.yaml)(:)$",
      "end": "^(?!\\s)",
      "name": "searchResult.block.yaml",
      "beginCaptures": {
        "0": {
          "name": "string path.searchResult"
        },
        "1": {
          "name": "dirname.path.searchResult"
        },
        "2": {
          "name": "basename.path.searchResult"
        },
        "3": {
          "name": "endingColon.path.searchResult"
        }
      },
      "patterns": [
        {
          "begin": "^  (\\d+)( )",
          "while": "^  (\\d+)(:| )",
          "beginCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "whileCaptures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            }
          },
          "name": "searchResult.resultLine.yaml searchResult.multiline",
          "patterns": [
            {
              "include": "source.yaml"
            }
          ]
        },
        {
          "match": "^  (\\d+)(:)(.*)",
          "name": "searchResult.resultLine.yaml searchResult.singleline",
          "captures": {
            "1": {
              "name": "constant.numeric lineNumber.searchResult resultPrefix.searchResult"
            },
            "2": {
              "name": "resultPrefixSeparator.searchResult resultPrefix.searchResult"
            },
            "3": {
              "patterns": [
                {
                  "include": "source.yaml"
                }
              ]
            }
          }
        }
      ]
    }
  }
}